<ul id="cblist" class="list-group checked-list-box">
</ul>

<input type="text" id="txtName" />
<input type="button" value="Add Requirement" id="btnSave" />
<input type="button" value="Save Requrements" id="btnSaveDegree" />

<script type="text/javascript">
$.reqVars = new Object();
$.reqVars.reqs = "<%= @degree.degree_requirements.to_s %>".split(";");

if (!($.reqVars.reqs.length == 1 && $.reqVars.reqs[0] == "")) {
   for (var i=0; i<$.reqVars.reqs.length; i++) {
      var container = $('#cblist');
      var inputs = container.find('input');
      status = $.reqVars.reqs[i][$.reqVars.reqs[i].length - 1];
      $.reqVars.reqs[i] = $.reqVars.reqs[i].slice(0,$.reqVars.reqs[i].length - 1);
      if (status == '1') {
         var li_object = $('<li id="cb'+(i+1)+'" class="list-group-item" data-checked="true">');
      } else {
         var li_object = $('<li id="cb'+(i+1)+'" class="list-group-item" data-checked="false">');
      }
      $('<label />', { 'for': 'cb'+ (i+1), data_id: (i+1).toString(), text: $.reqVars.reqs[i], id: 'lb' + (i+1) }).appendTo(li_object);
      $('<input />', { type: 'button', data_id: (i+1).toString(), value: 'Delete', db_id: 'db'+(i+1), id: 'btnDelete' + (i+1), class: 'btnDelete' }).appendTo(li_object);
      li_object.appendTo(container);
   }
} else {
   $.reqVars.reqs = new Array;
}

$.reqVars.deleted = new Array;
for (var i=0; i<$.reqVars.reqs.length; i++){
   $.reqVars.deleted[i] = 0;
}


$(document).ready(function() {
    $('#btnSave').click(function() {
        addCheckbox($('#txtName').val());
	$('#txtName').val("");
    });
});

$(document).ready(function() {
    $('#btnSaveDegree').click(function() {
        saveRequirements($('#txtName').val());
    });
});

$(document).ready(function() {
    $('[id^=btnDelete]').click(function() {
        removeCheckbox($(this).attr("db_id"));
    });
});

function update_checkbox(cb_object) {
        
        // Settings
        var $widget = cb_object,
            $checkbox = $('<input type="checkbox" class="hidden" />'),
            color = ($widget.data('color') ? $widget.data('color') : "primary"),
            style = ($widget.data('style') == "button" ? "btn-" : "list-group-item-"),
            settings = {
                on: {
                    icon: 'glyphicon glyphicon-check'
                },
                off: {
                    icon: 'glyphicon glyphicon-unchecked'
                }
            };
            
        $widget.css('cursor', 'pointer')
        $widget.append($checkbox);

        // Event Handlers
        $widget.on('click', function () {
            $checkbox.prop('checked', !$checkbox.is(':checked'));
            $checkbox.triggerHandler('change');
            updateDisplay();
        });
        $checkbox.on('change', function () {
            updateDisplay();
        });
          

        // Actions
        function updateDisplay() {
            var isChecked = $checkbox.is(':checked');

            // Set the button's state
            $widget.data('state', (isChecked) ? "on" : "off");

            // Set the button's icon
            $widget.find('.state-icon')
                .removeClass()
                .addClass('state-icon ' + settings[$widget.data('state')].icon);

            // Update the button's color
            if (isChecked) {
                $widget.addClass(style + color + ' active');
            } else {
                $widget.removeClass(style + color + ' active');
            }
        }

        // Initialization
        function init() {
            
            if ($widget.data('checked') == true) {
                $checkbox.prop('checked', !$checkbox.is(':checked'));
            }
            
            updateDisplay();

            // Inject the icon if applicable
            if ($widget.find('.state-icon').length == 0) {
                $widget.prepend('<span class="state-icon ' + settings[$widget.data('state')].icon + '"></span>');
            }
        }
        init();
    }

$(function () {
    $('.list-group.checked-list-box .list-group-item').each( function () { update_checkbox($(this));});
    
    $('#get-checked-data').on('click', function(event) {
        event.preventDefault(); 
        var checkedItems = {}, counter = 0;
        $("#check-list-box li.active").each(function(idx, li) {
            checkedItems[counter] = $(li).text();
            counter++;
        });
        $('#display-json').html(JSON.stringify(checkedItems, null, '\t'));
    });
});

function removeCheckbox(id) {
   id_num = parseInt(id.slice(2));
   $.reqVars.deleted[id_num-1] = 1;
   $('#btnDelete' + id_num).parent().remove();
}

function addCheckbox(name) {
   var container = $('#cblist');
   var inputs = container.find('input');
   var id = $.reqVars.reqs.length + 1;
   $.reqVars.reqs[$.reqVars.reqs.length] = name;
   $.reqVars.deleted.push(0);
  
   var li_object = $('<li id="cb' + id + '" class="list-group-item" data-checked="false" >');
   $('<label />', { 'for': 'cb'+id, data_id: id.toString(), text: name, id: 'lb' + id }).appendTo(li_object);
   $('<input />', { type: 'button', data_id: id.toString(), value: 'Delete', db_id: 'db'+id, id: 'btnDelete' + id, class: 'btnDelete' }).appendTo(li_object);
   li_object.appendTo(container);
   update_checkbox($('#cb'+id));
   $(document).ready(function() {
      $('[id^=btnDelete]').click(function() {
         removeCheckbox($(this).attr("db_id"));
      });
   });

}

function saveRequirements(name) {
   var tempReqs = $.reqVars.reqs.slice(0);
   for (var i=$.reqVars.reqs.length-1; i>=0; i--) {
      if ($.reqVars.deleted[i] == 1) {
         tempReqs.splice(i,1);
      } else if ($('#cb'+(i+1)).attr('class') == "list-group-item list-group-item-primary active") {
	 tempReqs[i] += "1";
      } else {
	 tempReqs[i] += "0";
      }
   }
   var reqString = tempReqs.join(";");
   $.ajax({url: "/degrees/"+<%= @degree.id.to_s %>+ "/addReq",
    data: {"req": reqString},
    dataType: 'html',
    success: function(response,status) { alert("Degree Successfully Saved"); },
    error: function(x,y,z) { alert("Error Saving Degree: " + y); }}
    );
}

</script>

